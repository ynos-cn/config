# 使用官方 Python 镜像
FROM python:3.11

# 设置工作目录
WORKDIR /app-python

# 设置环境变量，避免交互式安装
ENV DEBIAN_FRONTEND=noninteractive

# 更换 apt 镜像源
RUN echo '# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释' > /etc/apt/sources.list && \
  echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo '# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo '# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-updates main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo 'deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo '# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bookworm-backports main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo 'deb https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' >> /etc/apt/sources.list && \
  echo '# deb-src https://security.debian.org/debian-security bookworm-security main contrib non-free non-free-firmware' >> /etc/apt/sources.list

# 安装依赖，添加 --fix-missing 来解决可能的丢包问题
RUN apt-get clean && apt-get update --fix-missing && apt-get install -y \
  build-essential \
  cmake \
  pkg-config \
  libpq-dev \
  libmariadb-dev \
  && rm -rf /var/lib/apt/lists/*



# 复制项目文件到容器中
COPY ./app-python/ /app-python/

# 创建 pip 配置文件并写入腾讯镜像源配置
RUN echo "[global]" > /etc/pip.conf && \
  echo "disable-pip-version-check = true" >> /etc/pip.conf && \
  echo "extra-index-url = https://mirrors.tencent.com/pypi/simple/" >> /etc/pip.conf && \
  echo "index-url = https://mirrors.tencent.com/repository/pypi/tencent_pypi/simple/" >> /etc/pip.conf && \
  echo "timeout = 600" >> /etc/pip.conf

# 安装项目依赖
COPY ./app-python/requirements.txt /app-python/
RUN pip install --no-cache-dir -r /app-python/requirements.txt

# 设置环境变量
ENV PYTHONPATH=/app-python

# 暴露端口
EXPOSE 8891

# 运行后端应用
CMD ["python", "manage.py", "runserver", "0.0.0.0:8891"]
